rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isEmailUniquenessQuery() {
      return request.query != null && 
             request.query.filters != null &&
             request.query.filters.size == 1 &&
             request.query.filters[0] != null &&
             request.query.filters[0].fieldPath == 'email' && 
             request.query.filters[0].op == 'EQUAL' &&
             request.query.limit == 1; // Ensure query is limited
    }
    
    function isUserIdUniquenessQuery() {
      return request.query != null &&
             request.query.filters != null &&
             request.query.filters.size == 1 &&
             request.query.filters[0] != null &&
             request.query.filters[0].fieldPath == 'userId' && 
             request.query.filters[0].op == 'EQUAL' &&
             request.query.limit == 1; // Ensure query is limited
    }
    
    // User document rules
    match /users/{docId} {
      // Only allow users to read and write their own documents
      allow read, write: if isSignedIn() && request.auth.uid == docId;
      
      // Allow creating new user document during registration
      allow create: if isSignedIn() && request.auth.uid == docId &&
                   request.resource.data.keys().hasAll(['userId', 'email', 'name', 'phone', 'createdAt']);
    }
    
    // Sensor data rules
    match /sensorData/{document} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Setup requests rules
    match /setupRequests/{requestId} {
      allow read: if isSignedIn() && 
        (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow create: if isSignedIn() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && 
        (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
  }
}